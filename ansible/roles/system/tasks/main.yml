---
# tasks file for system
- name: Check that role is configured correctly
  include: checks/preflight-check.yml

# update gai.conf to raise the ipv4 priority
- name: Update gai.conf
  become: true
  copy:
    src: "{{ role_path }}/files/gai.conf"
    dest: /etc/gai.conf
    mode: 0644
    backup: yes
  tags:
    - system_update_gai

- name: Setup system group on servers
  include_tasks: groups.yml
  when: system_groups is defined and (system_groups | length > 0)

- name: Setup users and access on servers
  include_tasks: users.yml
  when: system_users is defined and (system_users | length > 0)

- name: ensure monitoring facts superdirectory exists
  file:
    path: "/etc/ansible"
    state: directory
    owner: root
    group: root
    mode: 0755 # wthout access for everyone, Ansible may throw exceptions at fact collection

- name: Perform os-specific actions
  include_tasks: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      skip: true
  loop_control:
    label: "{{ item | regex_replace('.*/') }}"

- name: Manage rsyslog
  include: rsyslog.yml
  when: ansible_os_family == 'RedHat'

- name: Modify cryptogrpahy for RHEL-9
  include_role:
    name: linux-system-roles.crypto_policies
  vars:
    crypto_policies_policy: "DEFAULT:SHA1"
    crypto_policies_reload: false
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '9'

- name: Create deployment directories
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  loop: "{{ deployment_folder_managed_directories + [deployment_folder] }}"

- name: Setup basic firewall rules
  include: firewall.yml
  when: firewall_manage | bool
  tags:
    - firewall

- name: Store a summary
  include_role:
    name: summary
  vars:
    group: System
    summary:
      name: Linux
      distribution: "{{ ansible_distribution }} {{ ansible_distribution_release }}"
      version: "{{ ansible_distribution_version }}"
  tags: summary
