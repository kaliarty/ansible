{{ ansible_managed | comment }}
# Logging configuration
logging.filter.on=false
ataccama.logging.plainTextConsoleAppender=false
ataccama.logging.jsonConsoleAppender=true
ataccama.logging.plainTextFileAppender=true
ataccama.logging.jsonFileAppender=false

# ha enabled
ataccama.one.term-suggestions.feedback.highly-available={{ ai_server_ha }}

# Authentication configuration
ataccama.authentication.keycloak.server-url=https://{{ nginx_hosts.one.hostname }}/auth
ataccama.authentication.keycloak.realm=ataccamaone
ataccama.authentication.keycloak.token.client-id=ts-api-token-client
ataccama.authentication.keycloak.token.secret={{ term_suggestions_token_client_secret }}
ataccama.authentication.keycloak.token.issuer=${ataccama.authentication.keycloak.server-url}/realms/${ataccama.authentication.keycloak.realm}
{% if nginx_cert_kind is defined
      and (nginx_cert_kind == 'ownca' or
      (nginx_cert_kind == 'provided' and
      nginx_certificates | selectattr('ca', 'defined') | map(attribute='ca') | list | length > 0)) %}
ataccama.client.connection.keycloak.tls.enabled=true
ataccama.client.connection.keycloak.tls.trust-store={{ java_cacerts_path }}
ataccama.client.connection.keycloak.tls.trust-store-type=JKS
ataccama.client.connection.keycloak.tls.trust-store-password={{ java_cacerts_password }}
{% endif %}

ataccama.authentication.internal.jwt.generator.key={{ term_suggestions_feedback_jwt_key.private }}

# Database connection
ataccama.one.apyc.database.connection.host={{ postgres.host }}:{{ postgres.port }}/{{ apyc.database_name }}
ataccama.one.apyc.database.connection.username={{ postgres.database.owner }}
ataccama.one.apyc.database.connection.password={{ postgres.database.password }}

{% if ataccama_internal_encryption is defined %}
# Encryption configuration
# internal.encryption.keystore={{ term_suggestions_feedback_install_dir }}/etc/{{ ataccama_internal_encryption.keystore | basename }}
# internal.encryption.keystore.passwordFile={{ term_suggestions_feedback_install_dir }}/etc/{{ ataccama_internal_encryption.passwordfile | basename }}
# internal.encryption.keystore.keyAlias={{ ataccama_internal_encryption.alias }}
# properties.encryption.keystore={{ term_suggestions_feedback_install_dir }}/etc/{{ ataccama_internal_encryption.keystore | basename }}
# properties.encryption.keystore.passwordFile={{ term_suggestions_feedback_install_dir }}/etc/{{ ataccama_internal_encryption.passwordfile | basename }}
{% endif %}

### Term Suggestions API jwt keys
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.environment={{ env }}
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.module=term-suggestions-api
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.uri={{ term_suggestions.api.host }}:{{ term_suggestions.api.http_port }}
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.security.jwt-keys.{{ term_suggestions_api_jwt_key.name }}.name={{ term_suggestions_api_jwt_key.name }}
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.security.jwt-keys.{{ term_suggestions_api_jwt_key.name }}.content={{ term_suggestions_api_jwt_key.content | b64encode }}
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.security.jwt-keys.{{ term_suggestions_api_jwt_key.name }}.fingerprint={{ term_suggestions_api_jwt_key.fp }}
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.security.jwt-keys.{{ term_suggestions_api_jwt_key.name }}.is-revoked=false
ataccama.one.platform.deployments.{{ term_suggestions_api_deployment_name }}.security.roles[0]=IMPERSONATION

{% if nginx_cert_kind is defined and (nginx_cert_kind == 'ownca' or (nginx_cert_kind == 'provided' and nginx_certificates | selectattr('ca', 'defined') | map(attribute='ca') | list | length > 0)) %}
ataccama.client.connection.keycloak.tls.enabled=true
ataccama.client.connection.keycloak.tls.trust-store={{ install_dir }}/etc/certstore.p12
ataccama.client.connection.keycloak.tls.trust-store-type=PKCS12
ataccama.client.connection.keycloak.tls.trust-store-password=
{% endif %}
