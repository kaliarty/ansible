---
# Secrets (passwords): use strong, unique, randomly-generated passwords. Do not reuse passwords for multiple sevices.
# NOTE: This will at least protect customers from trivial attacks.
# We can't generate them per deployment, because some passwords can't be automatically changed,
# and we can't leave them empty because the error messages are impenetrable for ordinary user.
# If you for some reason do want weak passwords, override them in your own inventory.

# Keycloak secrets. Fill in passwords, usernames can be safely left at default.
keycloak_admin:
  username: admin
  password:
keycloak_one_admin:
  username: admin
  password:
keycloak_monitoring_user:
  username: monitoring_user
  password:

# Keycloak client secrets: Keycloak clients use them to authenticate to Keycloak.
anomaly_detection_token_client_secret:
term_suggestions_token_client_secret:
mmm_admin_client_secret:
mmm_token_client_secret:
dpm_token_client_secret:
one_webapp_token_client_secret:
dpe_admin_client_secret:
dpe_token_client_secret:
dqit_webapp_token_client_secret:
dqit_steps_token_client_secret:
dqit_admin_client_secret:
audit_token_client_secret:
rdm_admin_client_secret:
rdm_token_client_secret:
mdm_admin_client_secret:
mdm_token_client_secret:
mdm_webapp_public_client_secret:
runtime_server_token_client_secret:
task_token_client_secret:
task_admin_client_secret:
workflow_token_client_secret:
workflow_admin_client_secret:
comment_token_client_secret:
comment_admin_client_secret:
dmm_token_client_secret:
dmm_admin_client_secret:
mde_lineage_token_client_secret:
mde_lineage_admin_client_secret:
dqf_token_client_secret:

# Other secrets
minio_secret_key:
grafana_security:
  admin_user: admin
  admin_password:
opensearch_dashboards_admin_password:
prometheus_admin_password:
alertmanager_admin_password:
nginx_default_password:
dqit_admin_password:

# Database passwords
postgresql_admin_password:
db_user_dqit_password:
db_user_one_password:
db_user_rdm_password:
db_user_mdm_password:
